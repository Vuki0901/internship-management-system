// <auto-generated />
using System;
using InternshipManagementSystem.Persistency;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternshipManagementSystem.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250512163033_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternshipManagementSystem.Domain.Internship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudyLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.InternshipProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactEmailAddress")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactPhoneNumber")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("PersonalIdentificationNumber")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("InternshipProviders");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PersonalIdentificationNumber")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("RoleType", "UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("UserRoles");

                    b.HasDiscriminator<string>("RoleType").HasValue("UserRole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Administrator", b =>
                {
                    b.HasBaseType("InternshipManagementSystem.Domain.UserRole");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.InternshipSupervisor", b =>
                {
                    b.HasBaseType("InternshipManagementSystem.Domain.UserRole");

                    b.Property<string>("AcademicDegreeAbbreviation")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasDiscriminator().HasValue("InternshipSupervisor");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Mentor", b =>
                {
                    b.HasBaseType("InternshipManagementSystem.Domain.UserRole");

                    b.Property<Guid?>("InternshipProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("InternshipProviderId");

                    b.HasDiscriminator().HasValue("Mentor");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Student", b =>
                {
                    b.HasBaseType("InternshipManagementSystem.Domain.UserRole");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Internship", b =>
                {
                    b.HasOne("InternshipManagementSystem.Domain.Mentor", null)
                        .WithMany("Internships")
                        .HasForeignKey("MentorId");

                    b.HasOne("InternshipManagementSystem.Domain.Student", null)
                        .WithMany("Internships")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.UserRole", b =>
                {
                    b.HasOne("InternshipManagementSystem.Domain.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Mentor", b =>
                {
                    b.HasOne("InternshipManagementSystem.Domain.InternshipProvider", "InternshipProvider")
                        .WithMany()
                        .HasForeignKey("InternshipProviderId");

                    b.Navigation("InternshipProvider");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.User", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Mentor", b =>
                {
                    b.Navigation("Internships");
                });

            modelBuilder.Entity("InternshipManagementSystem.Domain.Student", b =>
                {
                    b.Navigation("Internships");
                });
#pragma warning restore 612, 618
        }
    }
}
